{"ast":null,"code":"var _jsxFileName = \"/Users/elenarima/Desktop/projects/sudoku/src/App.js\";\nimport styles from \"./styles/App.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction generateSudoku() {\n  let sudoku = new Array(9).fill(null).map(() => new Array(9).fill(null));\n  fillSudoku(sudoku, 0, 0);\n  return sudoku;\n}\nfunction fillSudoku(sudoku, row, col) {\n  if (col === 9) {\n    col = 0;\n    row++;\n  }\n  if (row === 9) {\n    return true;\n  }\n  if (sudoku[row][col] !== null) {\n    return fillSudoku(sudoku, row, col + 1);\n  }\n  let possibleValues = shuffle([1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  for (let i = 0; i < possibleValues.length; i++) {\n    let value = possibleValues[i];\n    if (isValid(sudoku, row, col, value)) {\n      sudoku[row][col] = value;\n      if (fillSudoku(sudoku, row, col + 1)) {\n        return true;\n      }\n      sudoku[row][col] = null;\n    }\n  }\n  return false;\n}\nfunction isValid(sudoku, row, col, value) {\n  for (let i = 0; i < 9; i++) {\n    if (sudoku[row][i] === value || sudoku[i][col] === value) {\n      return false;\n    }\n  }\n  let rowCorner = Math.floor(row / 3) * 3;\n  let colCorner = Math.floor(col / 3) * 3;\n  for (let i = rowCorner; i < rowCorner + 3; i++) {\n    for (let j = colCorner; j < colCorner + 3; j++) {\n      if (sudoku[i][j] === value) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\nfunction shuffle(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\nconst Square = props => {\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: props.element\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 4\n  }, this);\n};\n_c = Square;\nconst Sudokurow = props => {\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: props.row.map(element => /*#__PURE__*/_jsxDEV(Square, {\n      element: element\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 31\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 7\n  }, this);\n};\n_c2 = Sudokurow;\nconst App = () => {\n  const sudokuArray = generateSudoku();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: styles.sudoku,\n      children: suodokuArray.forEach(row => /*#__PURE__*/_jsxDEV(Sudokurow, {\n        row: row\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 38\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Sudokurow\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["styles","jsxDEV","_jsxDEV","generateSudoku","sudoku","Array","fill","map","fillSudoku","row","col","possibleValues","shuffle","i","length","value","isValid","rowCorner","Math","floor","colCorner","j","array","random","Square","props","children","type","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","Sudokurow","_c2","App","sudokuArray","className","container","suodokuArray","forEach","_c3","$RefreshReg$"],"sources":["/Users/elenarima/Desktop/projects/sudoku/src/App.js"],"sourcesContent":["import styles from \"./styles/App.module.css\"\n\nfunction generateSudoku() {\n  let sudoku = new Array(9).fill(null).map(() => new Array(9).fill(null));\n  fillSudoku(sudoku, 0, 0);\n  return sudoku;\n}\n\nfunction fillSudoku(sudoku, row, col) {\n  if (col === 9) {\n    col = 0;\n    row++;\n  }\n\n  if (row === 9) {\n    return true;\n  }\n\n  if (sudoku[row][col] !== null) {\n    return fillSudoku(sudoku, row, col + 1);\n  }\n\n  let possibleValues = shuffle([1, 2, 3, 4, 5, 6, 7, 8, 9]);\n\n  for (let i = 0; i < possibleValues.length; i++) {\n    let value = possibleValues[i];\n    if (isValid(sudoku, row, col, value)) {\n      sudoku[row][col] = value;\n      if (fillSudoku(sudoku, row, col + 1)) {\n        return true;\n      }\n      sudoku[row][col] = null;\n    }\n  }\n\n  return false;\n}\n\nfunction isValid(sudoku, row, col, value) {\n  for (let i = 0; i < 9; i++) {\n    if (sudoku[row][i] === value || sudoku[i][col] === value) {\n      return false;\n    }\n  }\n  let rowCorner = Math.floor(row / 3) * 3;\n  let colCorner = Math.floor(col / 3) * 3;\n  for (let i = rowCorner; i < rowCorner + 3; i++) {\n    for (let j = colCorner; j < colCorner + 3; j++) {\n      if (sudoku[i][j] === value) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nfunction shuffle(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n\nconst Square=(props)=> {\n  return (\n   <td><input type=\"number\" value={props.element}></input></td>\n  )\n}\n\nconst Sudokurow=(props)=> {\n  return(\n      <tr>\n      {props.row.map(element=><Square element={element}/>)}\n      </tr>\n    )\n}\n\n\nconst App = () => {\n  \n  const sudokuArray = generateSudoku()\n    return (\n    <div className={styles.container}>\n\n      <table className= {styles.sudoku}>\n\n        {suodokuArray.forEach(row => <Sudokurow row={row}/>)}\n\n         </table>\n    \n     \n  \n    </div>\n    )\n  }\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}